version: "3.8"

services:
  booking-service:
    build: ./booking-service
    ports:
      - "8081:8081"
    depends_on:
      - temporal
    environment:
      - DB_HOST=booking-db
      - DB_PORT=5432
      - TEMPORAL_ADDRESS=temporal:7233
    networks:
      - monitoring


  ticket-service:
    build: ./ticket-service
    ports:
      - "8082:8082"
    networks:
      - monitoring
    environment:
      - DB_HOST=ticket-db
      - DB_PORT=5432

  payment-service:
    build: ./payment-service
    ports:
      - "8083:8083"
    networks:
      - monitoring
    environment:
      - DB_HOST=payment-db
      - DB_PORT=5432

  notification-service:
    build: ./notification-service
    ports:
      - "8084:8080"
    networks:
      - monitoring

  saga-service:
    build: ./saga-service
    ports:
      - "8085:8085"
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
    restart: unless-stopped
    networks:
    - monitoring

  booking-db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: booking
      POSTGRES_PASSWORD: bookingpass
      POSTGRES_DB: bookingdb
    ports:
      - "5431:5432"
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "booking", "-d", "bookingdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  ticket-db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: ticket
      POSTGRES_PASSWORD: ticketpass
      POSTGRES_DB: ticketdb
    ports:
      - "5433:5432"
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ticketdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  payment-db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: payment
      POSTGRES_PASSWORD: paymentpass
      POSTGRES_DB: paymentdb
    ports:
      - "5434:5432"
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "payment"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - monitoring

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"
    networks:
      - monitoring

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    ports:
      - "3200:3200"
      - "4317:4317"   # OTLP gRPC 
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
    command: ["--config.file=/etc/tempo.yaml"]
    networks:
      - monitoring
  # postgres-exporter-booking:
  #   image: prometheuscommunity/postgres-exporter
  #   environment:
  #     DATA_SOURCE_NAME: "postgresql://booking:bookingpass@bookingdb:5432/bookingdb?sslmode=disable"
  #   ports:
  #     - "9187:9187"
  #   networks:
  #     - monitoring

  # postgres-exporter-ticket:
  #   image: prometheuscommunity/postgres-exporter
  #   environment:
  #     DATA_SOURCE_NAME: "postgresql://ticket:ticketpass@ticketdb:5432/ticketdb?sslmode=disable"
  #   ports:
  #     - "9188:9188"
  #   networks:
  #     - monitoring
  
  # postgres-exporter-payment:
  #   image: prometheuscommunity/postgres-exporter
  #   environment:
  #     DATA_SOURCE_NAME: "postgresql://payment:paymentpass@paymentdb:5432/paymentdb?sslmode=disable"
  #   ports:
  #     - "9189:9189"
  #   networks:
  #     - monitoring
  
  
  temporal:
      image: temporalio/auto-setup:1.22
      ports:
        - "7233:7233"
      environment:
        - DB=postgresql
        - DB_PORT=5432
        - POSTGRES_USER=temporal
        - POSTGRES_PWD=temporal
        - POSTGRES_SEEDS=temporal-db
      depends_on:
        - temporal-db
      networks:
      - monitoring
      
  temporal-db:
    image: postgres:13
    environment:
      TEMPORAL_ADDRESS: temporal:7233
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
      POSTGRES_DB: temporal
    ports:
      - "5432:5432"
    volumes:
      - temporal_pgdata:/var/lib/postgresql/data
    networks:
    - monitoring

  temporal-web:
    image: temporalio/web:latest
    ports:
      - "8088:8088"
    environment:
      - TEMPORAL_GRPC_ENDPOINT=temporal:7233
    depends_on:
      - temporal

networks:
  monitoring:
    driver: bridge

volumes:
    temporal_pgdata:
