basePath: /
definitions:
  models.Booking:
    properties:
      id:
        type: integer
      status:
        $ref: '#/definitions/models.BookingStatus'
      ticketID:
        type: integer
      userID:
        type: integer
    type: object
  models.BookingStatus:
    enum:
    - draft
    - reserved
    - paid
    - canceled
    type: string
    x-enum-comments:
      BookingStatusCanceled: Отменено
      BookingStatusDraft: Черновик брони
      BookingStatusPaid: Оплачено
      BookingStatusReserved: Забронировано, но не оплачено
    x-enum-varnames:
    - BookingStatusDraft
    - BookingStatusReserved
    - BookingStatusPaid
    - BookingStatusCanceled
  models.CreateBookingData:
    properties:
      id:
        type: integer
      price:
        type: integer
      ticketID:
        type: integer
      userID:
        type: integer
    type: object
  types.CreateBookingResponse:
    properties:
      bookingID:
        type: integer
    type: object
  types.GetBookingByIDHandlerResponse:
    properties:
      booking:
        $ref: '#/definitions/models.Booking'
    type: object
host: localhost:8081
info:
  contact: {}
  description: API для сервиса бронирования
  title: Booking Service API
  version: "1.0"
paths:
  /:
    get:
      description: Проверка доступности сервиса
      produces:
      - text/plain
      responses:
        "200":
          description: hello
          schema:
            type: string
      summary: Health check
      tags:
      - health
  /booking/:
    post:
      consumes:
      - application/json
      description: Создание бронирования пользователем
      parameters:
      - description: Данные для создания брони
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/models.CreateBookingData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.CreateBookingResponse'
        "400":
          description: bad request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Создать бронь
      tags:
      - booking
  /booking/{booking_id}:
    get:
      description: Возвращает информацию о бронировании
      parameters:
      - description: Booking ID
        in: path
        name: booking_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GetBookingByIDHandlerResponse'
        "400":
          description: bad request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Получить бронь по ID
      tags:
      - booking
swagger: "2.0"
